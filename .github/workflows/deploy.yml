name: Deploy to k3s with Local Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  SERVER_IP: shivajshankar1.duckdns.org
  SSH_USER: ubuntu
  WORKING_DIR: /home/ubuntu/githubautomation/diy_authentication_project
  BACKEND_IMAGE: diy-auth-backend
  FRONTEND_IMAGE: diy-auth-frontend
  NAMESPACE: auth-app
  FRONTEND_URL: http://shivajshankar1.duckdns.org:3000
  BACKEND_URL: http://shivajshankar1.duckdns.org:8080
  K3S_DIR: /home/ubuntu/githubautomation/diy_authentication_project/deploy/k3s

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Copy source code to server
      run: |
        # Create working directory
        ssh -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SERVER_IP }} "
          mkdir -p ${{ env.WORKING_DIR }}
        "
        
        # Make deploy script executable
        chmod +x ./deploy/scripts/deploy.sh
        
        # Copy source code (excluding node_modules and other unnecessary files)
        rsync -avz -e "ssh -o StrictHostKeyChecking=no" \
          --exclude='.git' \
          --exclude='node_modules' \
          --exclude='.github' \
          --exclude='.idea' \
          --exclude='*.iml' \
          . \
          ${{ env.SSH_USER }}@${{ env.SERVER_IP }}:${{ env.WORKING_DIR}}/

    - name: Run deployment script
      run: |
        ssh -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SERVER_IP }} << 'ENDSSH'
          cd ${{ env.WORKING_DIR }}
          
          # Set environment variables
          export MONGODB_URI='${{ secrets.MONGODB_URI }}'
          export JWT_SECRET='${{ secrets.JWT_SECRET }}'
          export GOOGLE_CLIENT_ID='${{ secrets.GOOGLE_CLIENT_ID }}'
          export GOOGLE_CLIENT_SECRET='${{ secrets.GOOGLE_CLIENT_SECRET }}'
          export FRONTEND_URL='${{ env.FRONTEND_URL }}'
          export BACKEND_URL='${{ env.BACKEND_URL }}'
          
          # Make script executable and run it
          chmod +x ./deploy/scripts/deploy.sh
          ./deploy/scripts/deploy.sh
        ENDSSH

    - name: Verify deployment
      run: |
        echo "=== Verifying Deployment ==="
        echo "Backend Health: ${{ env.BACKEND_URL }}/actuator/health"
        echo "Frontend: ${{ env.FRONTEND_URL }}"
        
        # Simple health check
        echo -n "Backend status: "
        curl -s -o /dev/null -w "%{http_code}" ${{ env.BACKEND_URL }}/actuator/health || echo "unreachable"
        echo -n "\nFrontend status: "
        curl -s -o /dev/null -w "%{http_code}" ${{ env.FRONTEND_URL }} || echo "unreachable"
